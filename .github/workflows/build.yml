name: Build Mod

on:
  pull_request:
    # Run on all pull requests regardless of target branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  detect-java:
    runs-on: ubuntu-latest
    outputs:
      java-version: ${{ steps.get-java-version.outputs.java-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Determine Java version from build.gradle
        id: get-java-version
        run: |
          # Load Java version directly from properties file in a more reliable way
          JAVA_VERSION=$(awk -F= '/^javaVersion[[:space:]]*=/ {gsub(/^[[:space:]]+|[[:space:]]+$/, "", $2); print $2}' gradle.properties)
          
          # If no version found, default to Java 8
          if [ -z "$JAVA_VERSION" ]; then
            JAVA_VERSION=8
          fi
          
          echo "java-version=$JAVA_VERSION" >> $GITHUB_OUTPUT
          echo "Detected Java Version: $JAVA_VERSION"

  build:
    needs: detect-java
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up JDK ${{ needs.detect-java.outputs.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ needs.detect-java.outputs.java-version }}
        distribution: 'temurin'  # Use Adoptium's Temurin distribution
        cache: gradle
        
    - name: Make Gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Build with Gradle
      run: ./gradlew build